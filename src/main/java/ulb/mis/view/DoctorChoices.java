/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ulb.mis.view;
import java.awt.Component;
import java.awt.event.ActionEvent;
import java.util.List;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.swing.JButton;
import javax.swing.JFrame;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import ulb.mis.controller.PatientJpaController;
import ulb.mis.controller.exceptions.IllegalOrphanException;
import ulb.mis.controller.exceptions.NonexistentEntityException;
import ulb.mis.model.Doctor;
import ulb.mis.model.Patient;


/**
 *
 * @author fanny
 */
public class DoctorChoices extends javax.swing.JFrame {
    private final EntityManagerFactory emfac = Persistence.createEntityManagerFactory("MISproject_PU");
    private final PatientJpaController doctorCtrl = new PatientJpaController(emfac);
    
    private static final Logger LOGGER = LogManager.getLogger(DoctorChoices.class.getName());
    
    Doctor doctor = null;
    /**
     * Creates new form DoctorChoices
     */
    public DoctorChoices() {
        initComponents();
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        titleLabel = new javax.swing.JLabel();
        AddSicknessButton = new javax.swing.JButton();
        deleteDoctorAccountButton = new javax.swing.JButton();

        jButton1.setText("Approvals");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ApprovalsActionPerformed(evt);
            }
        });

        titleLabel.setBackground(new java.awt.Color(255, 204, 102));
        titleLabel.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        titleLabel.setForeground(new java.awt.Color(102, 102, 102));
        titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLabel.setText("Doctor interface");
        titleLabel.setToolTipText("");
        titleLabel.setOpaque(true);

        AddSicknessButton.setText("Add sickness");
        AddSicknessButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddSicknessButtonActionPerformed(evt);
            }
        });

        deleteDoctorAccountButton.setBackground(new java.awt.Color(255, 153, 153));
        deleteDoctorAccountButton.setText("Delete my account");
        deleteDoctorAccountButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteDoctorAccountButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(deleteDoctorAccountButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(AddSicknessButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(14, 14, 14))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AddSicknessButton, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addComponent(deleteDoctorAccountButton)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void ApprovalsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ApprovalsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ApprovalsActionPerformed

    private void AddSicknessButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddSicknessButtonActionPerformed
        addSickness addSicknessPopup = new addSickness();
        addSicknessPopup.setVisible(true);
    }//GEN-LAST:event_AddSicknessButtonActionPerformed

    private void refreshDoctorList(){
        List doctors = doctorCtrl.findPatientEntities();
        EntityListModel<Patient> model = new EntityListModel(doctors);
    }
    
    private void deleteDoctorAccountButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteDoctorAccountButtonActionPerformed
        this.doctor = doctor;
        int selectedDoctorId = doctor.getIddoctor();
        
         try {
            LOGGER.debug("Deleting patient with id: " + selectedDoctorId);
            doctorCtrl.destroy(selectedDoctorId);
        } catch (IllegalOrphanException | NonexistentEntityException ex) {
            LOGGER.error("Failed to delete patient", ex);
        }
        
        refreshDoctorList();
        
    }//GEN-LAST:event_deleteDoctorAccountButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddSicknessButton;
    private javax.swing.JButton deleteDoctorAccountButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel titleLabel;
    // End of variables declaration//GEN-END:variables

}
